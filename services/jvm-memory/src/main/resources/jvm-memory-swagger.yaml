swagger: '2.0'
info:
  version: 0.0.2
  title: Thermostat Web Gateway JVM Memory API
  license:
    name: GPL v2 with Classpath Exception
    url: 'http://www.gnu.org/licenses'
consumes:
  - application/json
produces:
  - application/json
  - text/html; charset=utf-8
basePath: /0.0.2
paths:
  /:
    get:
      description: Get jvm memory information.
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/projection'
        - $ref: '#/parameters/query'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jvm-memory-stats-response'
    put:
      description: Update jvm memory information.
      parameters:
        - $ref: '#/parameters/put-body'
        - $ref: '#/parameters/query'
      responses:
        '200':
          description: OK
    post:
      description: Add jvm memory information
      parameters:
        - $ref: '#/parameters/jvm-memory-stats'
      responses:
        '200':
          description: OK
    delete:
      description: Delete jvm memory information.
      parameters:
        - $ref: '#/parameters/query'
      responses:
        '200':
          description: OK
definitions:
  jvm-memory-stats-response:
    type: object
    properties:
      response:
          $ref: '#/definitions/jvm-memory-stats'
  jvm-memory-stats:
    type: array
    items:
      $ref: '#/definitions/jvm-memory-stat'
  jvm-memory-stat:
    type: object
    properties:
      agentId:
        type: string
      jvmId:
        type: string
      timeStamp:
        $ref: '#/definitions/timestamp'
      metaspaceMaxCapacity:
        $ref: '#/definitions/metric'
      metaspaceMinCapacity:
        $ref: '#/definitions/metric'
      metaspaceCapacity:
        $ref: '#/definitions/metric'
      metaspaceUsed:
        $ref: '#/definitions/metric'
      generations:
        type: array
        items:
          $ref: '#/definitions/generations-item'
  generations-item:
    type: object
    properties:
      capacity:
        $ref: '#/definitions/metric'
      collector:
        type: string
      maxCapacity:
        $ref: '#/definitions/metric'
      name:
        type: string
      spaces:
        type: array
        items:
          $ref: '#/definitions/spaces-item'
  spaces-item:
    type: object
    properties:
      capacity:
        $ref: '#/definitions/metric'
      index:
        type: integer
      maxCapacity:
        $ref: '#/definitions/metric'
      name:
        type: string
      used:
        $ref: '#/definitions/metric'

  metric:
    type: object
    properties:
      $numberLong:
        type: string
  timestamp:
    description: UNIX timestamp in milliseconds
    type: object
    properties:
      $numberLong:
        type: string

  put-body:
    type: object
    properties:
      "set":
        type: object
parameters:
  jvm-memory-stats:
    name: jvm-memory-stats
    in: body
    description: The jvm memory statistics
    required: true
    schema:
      $ref: '#/definitions/jvm-memory-stats'
  put-body:
    name: putBody
    in: body
    description: "The JSON object containing a 'set' object. This contains single item JSON objects that specify the field to replace and the JSON value to replace with. Example { \"set\" : { \"field\" : \"value\", \"field2\":{\"object\":\"item\"} }"
    required: true
    schema:
      $ref: '#/definitions/put-body'
  limit:
    name: l
    in: query
    description: Limit of items to return. Example '1'
    type: integer
  offset:
    name: o
    in: query
    description: Offset of items to return. Example '0'
    type: integer
  sort:
    name: s
    in: query
    description: Sort string. Comma separated list of fields prefixed with '+' for ascending or '-' for descending. Example '?s=+a,-b' Fields use dot notation for embedded documents. Example 'outer.inner' refers to field inner contained in field outer.
    type: string
  query:
    name: q
    in: query
    description: Query string. Comma separated list of key, comparator, value pairs. Comparator supports '==', '<=', '>=', '<', '>', '!='. Example '?q=a==b,c!=d'. Keys are fields in documents and use dot notation for embedded documents. Example 'outer.inner' refers to field inner contained in field outer.
    type: string
  projection:
    name: p
    in: query
    description: Projection string. Comma separated list of fields to include in the response. Example '?p=a,b' Fields use dot notation for embedded documents. Example 'outer.inner' refers to field inner contained in field outer.
    type: string